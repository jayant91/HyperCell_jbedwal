[0m[[0mdebug[0m] [0m[naha] [0m
[0m[[0mdebug[0m] [0m[naha] Initial source changes: [0m
[0m[[0mdebug[0m] [0m[naha] 	removed:Set()[0m
[0m[[0mdebug[0m] [0m[naha] 	added: Set(/home/jayant/HyperCell/Controller/fabricConfigure.scala, /home/jayant/HyperCell/Controller/controllerLocalStorage.scala, /home/jayant/HyperCell/Controller/fifo.scala, /home/jayant/HyperCell/Controller/fabOutSeqArb.scala, /home/jayant/HyperCell/Controller/fabInSeqDP.scala, /home/jayant/HyperCell/Controller/fabOutSeqCtrl.scala, /home/jayant/HyperCell/Controller/RRArbiter.scala, /home/jayant/HyperCell/Controller/parameters.scala, /home/jayant/HyperCell/Controller/controllerConfigure.scala, /home/jayant/HyperCell/Controller/loadSeqDP.scala, /home/jayant/HyperCell/Controller/fifoFabOut.scala, /home/jayant/HyperCell/Controller/storeSeqDP.scala, /home/jayant/HyperCell/Controller/controllerTop.scala, /home/jayant/HyperCell/Controller/memConfig.scala, /home/jayant/HyperCell/Controller/fabOutSeqTop.scala, /home/jayant/HyperCell/Controller/fabOutSeq.scala, /home/jayant/HyperCell/Controller/customReg.scala, /home/jayant/HyperCell/Controller/storeSeqCtrl.scala, /home/jayant/HyperCell/Controller/fabInSeq.scala, /home/jayant/HyperCell/Controller/fabInSeqCtrl.scala, /home/jayant/HyperCell/Controller/memoryBank.scala, /home/jayant/HyperCell/Controller/loadSeqCtrl.scala, /home/jayant/HyperCell/Controller/storeSeq.scala, /home/jayant/HyperCell/Controller/loadSeq.scala, /home/jayant/HyperCell/Controller/globalParameters.scala, /home/jayant/HyperCell/Controller/fabOutSeqDP.scala, /home/jayant/HyperCell/Controller/mainConfigure.scala, /home/jayant/HyperCell/Controller/fabricConfigureTop.scala)[0m
[0m[[0mdebug[0m] [0m[naha] 	modified: Set()[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated products: Set()[0m
[0m[[0mdebug[0m] [0m[naha] External API changes: API Changes: Set()[0m
[0m[[0mdebug[0m] [0m[naha] Modified binary dependencies: Set()[0m
[0m[[0mdebug[0m] [0m[naha] Initial directly invalidated sources: Set(/home/jayant/HyperCell/Controller/fabricConfigure.scala, /home/jayant/HyperCell/Controller/controllerLocalStorage.scala, /home/jayant/HyperCell/Controller/fifo.scala, /home/jayant/HyperCell/Controller/fabOutSeqArb.scala, /home/jayant/HyperCell/Controller/fabInSeqDP.scala, /home/jayant/HyperCell/Controller/fabOutSeqCtrl.scala, /home/jayant/HyperCell/Controller/RRArbiter.scala, /home/jayant/HyperCell/Controller/parameters.scala, /home/jayant/HyperCell/Controller/controllerConfigure.scala, /home/jayant/HyperCell/Controller/loadSeqDP.scala, /home/jayant/HyperCell/Controller/fifoFabOut.scala, /home/jayant/HyperCell/Controller/storeSeqDP.scala, /home/jayant/HyperCell/Controller/controllerTop.scala, /home/jayant/HyperCell/Controller/memConfig.scala, /home/jayant/HyperCell/Controller/fabOutSeqTop.scala, /home/jayant/HyperCell/Controller/fabOutSeq.scala, /home/jayant/HyperCell/Controller/customReg.scala, /home/jayant/HyperCell/Controller/storeSeqCtrl.scala, /home/jayant/HyperCell/Controller/fabInSeq.scala, /home/jayant/HyperCell/Controller/fabInSeqCtrl.scala, /home/jayant/HyperCell/Controller/memoryBank.scala, /home/jayant/HyperCell/Controller/loadSeqCtrl.scala, /home/jayant/HyperCell/Controller/storeSeq.scala, /home/jayant/HyperCell/Controller/loadSeq.scala, /home/jayant/HyperCell/Controller/globalParameters.scala, /home/jayant/HyperCell/Controller/fabOutSeqDP.scala, /home/jayant/HyperCell/Controller/mainConfigure.scala, /home/jayant/HyperCell/Controller/fabricConfigureTop.scala)[0m
[0m[[0mdebug[0m] [0m[naha] [0m
[0m[[0mdebug[0m] [0m[naha] Sources indirectly invalidated by:[0m
[0m[[0mdebug[0m] [0m[naha] 	product: Set()[0m
[0m[[0mdebug[0m] [0m[naha] 	binary dep: Set()[0m
[0m[[0mdebug[0m] [0m[naha] 	external source: Set()[0m
[0m[[0mdebug[0m] [0mAll initially invalidated sources: Set(/home/jayant/HyperCell/Controller/fabricConfigure.scala, /home/jayant/HyperCell/Controller/controllerLocalStorage.scala, /home/jayant/HyperCell/Controller/fifo.scala, /home/jayant/HyperCell/Controller/fabOutSeqArb.scala, /home/jayant/HyperCell/Controller/fabInSeqDP.scala, /home/jayant/HyperCell/Controller/fabOutSeqCtrl.scala, /home/jayant/HyperCell/Controller/RRArbiter.scala, /home/jayant/HyperCell/Controller/parameters.scala, /home/jayant/HyperCell/Controller/controllerConfigure.scala, /home/jayant/HyperCell/Controller/loadSeqDP.scala, /home/jayant/HyperCell/Controller/fifoFabOut.scala, /home/jayant/HyperCell/Controller/storeSeqDP.scala, /home/jayant/HyperCell/Controller/controllerTop.scala, /home/jayant/HyperCell/Controller/memConfig.scala, /home/jayant/HyperCell/Controller/fabOutSeqTop.scala, /home/jayant/HyperCell/Controller/fabOutSeq.scala, /home/jayant/HyperCell/Controller/customReg.scala, /home/jayant/HyperCell/Controller/storeSeqCtrl.scala, /home/jayant/HyperCell/Controller/fabInSeq.scala, /home/jayant/HyperCell/Controller/fabInSeqCtrl.scala, /home/jayant/HyperCell/Controller/memoryBank.scala, /home/jayant/HyperCell/Controller/loadSeqCtrl.scala, /home/jayant/HyperCell/Controller/storeSeq.scala, /home/jayant/HyperCell/Controller/loadSeq.scala, /home/jayant/HyperCell/Controller/globalParameters.scala, /home/jayant/HyperCell/Controller/fabOutSeqDP.scala, /home/jayant/HyperCell/Controller/mainConfigure.scala, /home/jayant/HyperCell/Controller/fabricConfigureTop.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Recompiling all 28 sources: invalidated sources (28) exceeded 50.0% of all sources[0m
[0m[[0minfo[0m] [0mCompiling 28 Scala sources to /home/jayant/HyperCell/Controller/target/scala-2.11/classes...[0m
[0m[[0mdebug[0m] [0mGetting org.scala-sbt:compiler-interface:0.13.11:component from component compiler for Scala 2.11.7[0m
[0m[[0mdebug[0m] [0mGetting org.scala-sbt:compiler-interface:0.13.11:component from component compiler for Scala 2.11.7[0m
[0m[[0mdebug[0m] [0mRunning cached compiler 75492adc, interfacing (CompilerInterface) with Scala compiler version 2.11.7[0m
[0m[[0mdebug[0m] [0mCalling Scala compiler with arguments  (CompilerInterface):[0m
[0m[[0mdebug[0m] [0m	-deprecation[0m
[0m[[0mdebug[0m] [0m	-feature[0m
[0m[[0mdebug[0m] [0m	-unchecked[0m
[0m[[0mdebug[0m] [0m	-language:reflectiveCalls[0m
[0m[[0mdebug[0m] [0m	-bootclasspath[0m
[0m[[0mdebug[0m] [0m	/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/classes:/home/jayant/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.7.jar[0m
[0m[[0mdebug[0m] [0m	-classpath[0m
[0m[[0mdebug[0m] [0m	/home/jayant/HyperCell/Controller/target/scala-2.11/classes:/home/jayant/.ivy2/cache/edu.berkeley.cs/chisel_2.11/jars/chisel_2.11-2.2.32.jar:/home/jayant/.ivy2/cache/org.scala-lang/scala-reflect/jars/scala-reflect-2.11.7.jar[0m
[0m[[0mdebug[0m] [0mScala compilation took 15.819570084 s[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /home/jayant/HyperCell/Controller/fabricConfigure.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /home/jayant/HyperCell/Controller/fabricConfigure.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/home/jayant/HyperCell/Controller/fabricConfigure.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/home/jayant/HyperCell/Controller/fabricConfigure.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /home/jayant/HyperCell/Controller/fabricConfigure.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	assert, nextIndex, hasExplicitReset, notify, parent, addNode, ownIndex, children, verify, name, printfs, outValid, addAssignment, addPin, wait, whenCond, $asInstanceOf, setName, <>, _clock, equals, setModuleName, bindings, names, resetPin, asInstanceOf, fabricConfigure, verifyWireWrap, switchKeys, addClock, params, synchronized, traversal, markComponent, verilog_parameters, bfs, $isInstanceOf, inDataReg, moduleName, addDefaultReset, addResetPin, main, inValid, notifyAll, named, resets, debug, isInstanceOf, dfs, assignments, asserts, fabricConfigureMain, nindex, <init>, stripComponent, clocks, inConfig, reportWireWrap, clock, apply, printf, configValid, nodes, ==, reset_=, clone, whenConds, neededWireWraps, rst, $init$, addModule$default$2, addModule, reset, outDataReg, hasExplicitClock, toString, outConfig, io, !=, getClass, findBinding, addPin$default$2, _reset, ne, hasWhenCond, getPathName, eq, debugs, getPathName$default$1, wires, ##, finalize, hashCode, level.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/fabricConfigureTop.scala: Set(fabricConfigure, <init>, inConfig, apply, rst, outConfig, io)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /home/jayant/HyperCell/Controller/controllerConfigure.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /home/jayant/HyperCell/Controller/controllerConfigure.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/home/jayant/HyperCell/Controller/controllerConfigure.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/home/jayant/HyperCell/Controller/controllerConfigure.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /home/jayant/HyperCell/Controller/controllerConfigure.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	assert, nextIndex, hasExplicitReset, notify, parent, addNode, children, verify, name, printfs, outValid, addAssignment, addPin, wait, whenCond, $asInstanceOf, setName, <>, _clock, computeCtrl, equals, setModuleName, bindings, names, controllerConfigure, resetPin, asInstanceOf, verifyWireWrap, switchKeys, addClock, params, synchronized, traversal, markComponent, verilog_parameters, bfs, $isInstanceOf, inDataReg, moduleName, addDefaultReset, addResetPin, inValid, notifyAll, named, resets, debug, isInstanceOf, dfs, assignments, asserts, nindex, <init>, stripComponent, clocks, inConfig, reportWireWrap, clock, apply, printf, nodes, ==, reset_=, clone, whenConds, neededWireWraps, $init$, addModule$default$2, addModule, reset, hasExplicitClock, toString, outConfig, io, !=, getClass, findBinding, addPin$default$2, _reset, ne, hasWhenCond, computeCtrlValid, getPathName, eq, debugs, getPathName$default$1, wires, ##, finalize, hashCode, level.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/loadSeqCtrl.scala: Set(computeCtrl, controllerConfigure, inValid, <init>, inConfig, apply, io, computeCtrlValid)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/fabInSeqCtrl.scala: Set(computeCtrl, controllerConfigure, inValid, <init>, inConfig, apply, io, computeCtrlValid)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/fabOutSeqCtrl.scala: Set(computeCtrl, controllerConfigure, inValid, <init>, inConfig, apply, io, computeCtrlValid)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/storeSeqCtrl.scala: Set(computeCtrl, controllerConfigure, inValid, <init>, inConfig, apply, io, computeCtrlValid)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /home/jayant/HyperCell/Controller/customReg.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /home/jayant/HyperCell/Controller/customReg.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/home/jayant/HyperCell/Controller/customReg.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/home/jayant/HyperCell/Controller/customReg.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /home/jayant/HyperCell/Controller/customReg.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	assert, nextIndex, hasExplicitReset, notify, parent, addNode, children, verify, name, printfs, addAssignment, addPin, wait, whenCond, $asInstanceOf, setName, ram, <>, _clock, equals, setModuleName, addrWidth, bindings, customReg, names, resetPin, asInstanceOf, verifyWireWrap, outData, switchKeys, addClock, params, synchronized, traversal, markComponent, verilog_parameters, bfs, $isInstanceOf, readEn, writeAddr, moduleName, addDefaultReset, addResetPin, writeEn, notifyAll, named, resets, inData, debug, isInstanceOf, dfs, assignments, asserts, nindex, <init>, stripComponent, clocks, reportWireWrap, clock, apply, printf, nodes, ==, reset_=, clone, whenConds, neededWireWraps, $init$, addModule$default$2, addModule, reset, hasExplicitClock, toString, io, !=, getClass, readAddr, findBinding, addPin$default$2, _reset, ne, hasWhenCond, getPathName, eq, debugs, getPathName$default$1, wires, ##, finalize, hashCode, level.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/fabInSeqDP.scala: Set(customReg, outData, readEn, writeAddr, writeEn, inData, <init>, apply, io, readAddr)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/loadSeqDP.scala: Set(customReg, outData, readEn, writeAddr, writeEn, inData, <init>, apply, io, readAddr)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/storeSeqDP.scala: Set(customReg, outData, readEn, writeAddr, writeEn, inData, <init>, apply, io, readAddr)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/memoryBank.scala: Set(addrWidth, customReg, outData, readEn, writeAddr, writeEn, inData, <init>, apply, io, readAddr)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/fabOutSeqDP.scala: Set(customReg, outData, readEn, <init>, apply, io, readAddr)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /home/jayant/HyperCell/Controller/RRArbiter.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /home/jayant/HyperCell/Controller/RRArbiter.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/home/jayant/HyperCell/Controller/RRArbiter.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/home/jayant/HyperCell/Controller/RRArbiter.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /home/jayant/HyperCell/Controller/RRArbiter.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	assert, nextIndex, hasExplicitReset, notify, parent, addNode, children, verify, name, printfs, addAssignment, addPin, wait, maskHihgerReq, whenCond, request, $asInstanceOf, setName, <>, _clock, equals, setModuleName, grantUnMasked, bindings, names, resetPin, asInstanceOf, verifyWireWrap, switchKeys, addClock, RRArbiter, params, synchronized, requestAny, traversal, markComponent, verilog_parameters, bfs, $isInstanceOf, anyReqMasked, moduleName, addDefaultReset, addResetPin, unMaskHigherReq, noReqMasked, pointerReg, notifyAll, named, resets, debug, isInstanceOf, dfs, assignments, asserts, requestMasked, nindex, <init>, stripComponent, clocks, reportWireWrap, clock, apply, printf, nodes, ==, reset_=, clone, whenConds, grantMasked, neededWireWraps, grant, $init$, addModule$default$2, addModule, reset, hasExplicitClock, toString, io, !=, getClass, findBinding, addPin$default$2, _reset, ne, hasWhenCond, getPathName, eq, debugs, getPathName$default$1, requestVec, wires, ##, finalize, hashCode, level.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/fabOutSeqArb.scala: Set(request, RRArbiter, <init>, apply, grant, io)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /home/jayant/HyperCell/Controller/fabInSeq.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /home/jayant/HyperCell/Controller/fabInSeq.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/home/jayant/HyperCell/Controller/fabInSeq.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/home/jayant/HyperCell/Controller/fabInSeq.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /home/jayant/HyperCell/Controller/fabInSeq.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	assert, nextIndex, hasExplicitReset, notify, loadStore, parent, addNode, children, verify, name, printfs, addAssignment, addPin, wait, whenCond, $asInstanceOf, fabInData, setName, <>, _clock, equals, setModuleName, bindings, names, resetPin, fabInSeq, asInstanceOf, verifyWireWrap, switchKeys, addClock, params, synchronized, traversal, markComponent, verilog_parameters, ctrlClass, bfs, $isInstanceOf, fabStoreValid, moduleName, addDefaultReset, addResetPin, fabStore, inValid, notifyAll, named, resets, debug, dpClass, isInstanceOf, dfs, assignments, asserts, nindex, <init>, stripComponent, clocks, inConfig, reportWireWrap, clock, apply, printf, nodes, ==, reset_=, fabInValid, clone, whenConds, neededWireWraps, $init$, addModule$default$2, computeDone, addModule, reset, hasExplicitClock, toString, io, !=, getClass, fabInRdy, findBinding, addPin$default$2, _reset, loadStoreValid, ne, hasWhenCond, getPathName, fabStoreRdy, eq, debugs, loadStoreRdy, getPathName$default$1, wires, ##, finalize, hashCode, level.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/controllerTop.scala: Set(loadStore, fabInData, fabInSeq, fabStoreValid, fabStore, inValid, <init>, inConfig, apply, fabInValid, computeDone, io, fabInRdy, loadStoreValid, fabStoreRdy, loadStoreRdy)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /home/jayant/HyperCell/Controller/fabInSeqDP.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /home/jayant/HyperCell/Controller/fabInSeqDP.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/home/jayant/HyperCell/Controller/fabInSeqDP.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/home/jayant/HyperCell/Controller/fabInSeqDP.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /home/jayant/HyperCell/Controller/fabInSeqDP.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	assert, nextIndex, bankToPortValid, bankReadDone, hasExplicitReset, notify, loadStore, parent, addNode, children, verify, name, readValid, isReadValid, printfs, addAssignment, addPin, wait, whenCond, seqLevelDoneReg2, $asInstanceOf, fabInData, setName, localStorage, <>, _clock, equals, setModuleName, nextSeqSelReg, bindings, seqMemAddr, names, portId, resetPin, asInstanceOf, verifyWireWrap, switchKeys, addClock, nextSeqReg1, bankSeq, params, synchronized, deqValid, traversal, markComponent, verilog_parameters, seqProceed, fabInSeqDP, bfs, $isInstanceOf, fabStoreValid, deqData, bankSeq2, rdyInit, moduleName, bankFifo, bankReadDoneReg, addDefaultReset, addResetPin, bankToPort, nextSeqRegValid1, fabStore, inValid, notifyAll, named, resets, debug, readValueBankFifo, isInstanceOf, dfs, assignments, inPortFifo, asserts, fabInSeqMem, nindex, readValuelocStrg, nextSeqReg2, <init>, stripComponent, clocks, inConfig, reportWireWrap, clock, apply, printf, nodes, enqData, ==, firstSeqSelReg, reset_=, collectFifo, fabInValid, clone, whenConds, allDone, nextSeqWire, neededWireWraps, rst, $init$, readDone, addModule$default$2, addModule, collectRdy, reset, bankSeqReg, hasExplicitClock, toString, deqRdy, io, !=, getClass, readAddr, fabInRdy, enqRdy, findBinding, addPin$default$2, nextSeqRegValid2, _reset, seqLevelDoneReg1, loadStoreValid, ne, nextSeq, hasWhenCond, getPathName, enqValid, fabInSeqMemConfig, rdy, fabStoreRdy, eq, debugs, enqRdyCollect, loadStoreRdy, getPathName$default$1, wires, ##, finalize, hashCode, level, seqMemAddrValid.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/fabInSeq.scala: Set(loadStore, fabInData, seqMemAddr, seqProceed, fabInSeqDP, fabStoreValid, fabStore, inValid, <init>, inConfig, apply, fabInValid, io, fabInRdy, loadStoreValid, fabStoreRdy, loadStoreRdy, seqMemAddrValid)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /home/jayant/HyperCell/Controller/fabOutSeqDP.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /home/jayant/HyperCell/Controller/fabOutSeqDP.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/home/jayant/HyperCell/Controller/fabOutSeqDP.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/home/jayant/HyperCell/Controller/fabOutSeqDP.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /home/jayant/HyperCell/Controller/fabOutSeqDP.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	assert, fabOutStore, nextIndex, hasExplicitReset, notify, parent, addNode, children, fabOutLocValid, verify, name, fabOut, localStoreData, printfs, addAssignment, addPin, wait, whenCond, $asInstanceOf, setName, <>, _clock, equals, setModuleName, bindings, seqMemAddr, names, outLocalFifo, resetPin, asInstanceOf, verifyWireWrap, switchKeys, addClock, params, synchronized, traversal, markComponent, verilog_parameters, seqProceed, bfs, $isInstanceOf, outStoreFifo, moduleName, addDefaultReset, addResetPin, fabOutStoreRdy, localStoreDataValid, inValid, notifyAll, named, resets, debug, fabOutValid, getNextSeq, isInstanceOf, dfs, assignments, asserts, nindex, fabOutSeqMem, <init>, stripComponent, clocks, fabOutStoreValid, inConfig, reportWireWrap, fabOutLocRdy, outDestStore, clock, apply, printf, nodes, ==, fabOutSeqDP, outLocValid, reset_=, clone, whenConds, neededWireWraps, rst, fabOutSeqMemConfig, $init$, addModule$default$2, addModule, reset, bankInfo, hasExplicitClock, toString, io, !=, fabOutLocStrgValid, getClass, fabOutRdy, fabOutLoc, findBinding, addPin$default$2, _reset, ne, nextSeq, hasWhenCond, getPathName, seqDone, eq, debugs, getPathName$default$1, wires, ##, finalize, hashCode, level, fabOutLocStrg, outDestLocal, seqMemAddrValid.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/fabOutSeq.scala: Set(fabOutStore, fabOutLocValid, fabOut, seqMemAddr, seqProceed, fabOutStoreRdy, inValid, fabOutValid, <init>, fabOutStoreValid, inConfig, fabOutLocRdy, apply, fabOutSeqDP, outLocValid, rst, io, fabOutRdy, fabOutLoc, seqMemAddrValid)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /home/jayant/HyperCell/Controller/controllerTop.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /home/jayant/HyperCell/Controller/controllerTop.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/home/jayant/HyperCell/Controller/controllerTop.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/home/jayant/HyperCell/Controller/controllerTop.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /home/jayant/HyperCell/Controller/controllerTop.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	assert, nextIndex, hasExplicitReset, notify, loadRqst, parent, addNode, children, verify, name, fabOut, printfs, addAssignment, addPin, wait, loadDone, whenCond, $asInstanceOf, fabInData, setName, <>, _clock, equals, loadRespValid, setModuleName, storeSeqClass, controllerTopMain, bindings, names, resetPin, asInstanceOf, verifyWireWrap, switchKeys, addClock, params, synchronized, traversal, markComponent, verilog_parameters, bfs, $isInstanceOf, controllerTop, moduleName, addDefaultReset, addResetPin, storeMemData, main, fabInSeqClass, inValid, notifyAll, named, resets, loadRqstRdy, debug, fabOutValid, isInstanceOf, dfs, assignments, loadRqstValid, asserts, loadSeqClass, nindex, storeDone, <init>, stripComponent, clocks, inConfig, reportWireWrap, clock, apply, printf, nodes, storeMemValid, ==, reset_=, fabInValid, clone, whenConds, neededWireWraps, $init$, addModule$default$2, computeDone, addModule, loadRespRdy, reset, hasExplicitClock, toString, io, fabConfigClass, !=, getClass, fabOutRdy, fabInRdy, findBinding, addPin$default$2, _reset, ne, hasWhenCond, getPathName, loadResp, eq, debugs, storeMemRdy, getPathName$default$1, wires, ##, finalize, hashCode, level, fabOutSeqClass, mainConfigClass.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /home/jayant/HyperCell/Controller/memoryBank.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /home/jayant/HyperCell/Controller/memoryBank.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/home/jayant/HyperCell/Controller/memoryBank.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/home/jayant/HyperCell/Controller/memoryBank.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /home/jayant/HyperCell/Controller/memoryBank.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	assert, nextIndex, hasExplicitReset, notify, parent, addNode, children, verify, name, printfs, addAssignment, addPin, wait, whenCond, $asInstanceOf, setName, memoryClass, <>, isValid, _clock, doInvalidate, equals, setModuleName, addrWidth, bindings, names, resetPin, asInstanceOf, verifyWireWrap, outData, switchKeys, addClock, isWriteFabricRdy, params, writeSuccess, synchronized, traversal, markComponent, verilog_parameters, writeFabricAddr, bfs, $isInstanceOf, readEn, writeAddr, moduleName, isWriteLoadRdy, addDefaultReset, addResetPin, writeEn, memoryBank, writeLoadAddr, notifyAll, named, resets, inData, debug, isInstanceOf, dfs, assignments, asserts, nindex, <init>, stripComponent, clocks, reportWireWrap, clock, apply, printf, nodes, ==, reset_=, clone, whenConds, neededWireWraps, readSuccess, rst, $init$, addModule$default$2, addModule, reset, validBit, hasExplicitClock, toString, io, !=, getClass, readAddr, findBinding, addPin$default$2, _reset, ne, hasWhenCond, getPathName, eq, debugs, getPathName$default$1, wires, ##, finalize, hashCode, level.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/controllerLocalStorage.scala: Set(isValid, doInvalidate, addrWidth, outData, isWriteFabricRdy, writeSuccess, writeFabricAddr, readEn, writeAddr, isWriteLoadRdy, writeEn, memoryBank, writeLoadAddr, inData, <init>, apply, readSuccess, rst, io, readAddr)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /home/jayant/HyperCell/Controller/controllerLocalStorage.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /home/jayant/HyperCell/Controller/controllerLocalStorage.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/home/jayant/HyperCell/Controller/controllerLocalStorage.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/home/jayant/HyperCell/Controller/controllerLocalStorage.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /home/jayant/HyperCell/Controller/controllerLocalStorage.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	assert, nextIndex, controllerLocalStorage, hasExplicitReset, notify, parent, addNode, children, verify, name, isReadValid, printfs, addAssignment, addPin, fifoLoadClass, wait, whenCond, $asInstanceOf, setName, <>, isValid, _clock, doInvalidate, equals, setModuleName, inDataLoad, addrWidth, bindings, names, resetPin, asInstanceOf, verifyWireWrap, outData, switchKeys, addClock, isWriteFabricRdy, fifoWidth, params, writeSuccess, synchronized, deqValid, traversal, markComponent, verilog_parameters, writeFabricAddr, bfs, $isInstanceOf, readEn, deqData, writeAddr, moduleName, isWriteLoadRdy, addDefaultReset, addResetPin, writeEn, writeLoadAddr, notifyAll, named, resets, inData, debug, isInstanceOf, dfs, assignments, asserts, enqValidLoad, nindex, inDataFabric, enqRdyLoad, <init>, stripComponent, clocks, reportWireWrap, clock, apply, printf, nodes, enqData, ==, reset_=, clone, whenConds, enqValidFabric, neededWireWraps, readSuccess, rst, $init$, addModule$default$2, addModule, enqRdyFabric, reset, hasExplicitClock, toString, deqRdy, io, !=, getClass, readAddr, enqRdy, findBinding, addPin$default$2, _reset, ne, memoryBankClass, hasWhenCond, getPathName, enqValid, eq, debugs, getPathName$default$1, wires, ##, finalize, hashCode, fifoFabricClass, level.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/fabInSeqDP.scala: Set(controllerLocalStorage, isReadValid, doInvalidate, inDataLoad, outData, deqValid, readEn, deqData, writeAddr, writeEn, inData, enqValidLoad, inDataFabric, enqRdyLoad, <init>, apply, enqData, enqValidFabric, rst, enqRdyFabric, deqRdy, io, readAddr, enqRdy, enqValid)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /home/jayant/HyperCell/Controller/loadSeqCtrl.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /home/jayant/HyperCell/Controller/loadSeqCtrl.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/home/jayant/HyperCell/Controller/loadSeqCtrl.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/home/jayant/HyperCell/Controller/loadSeqCtrl.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /home/jayant/HyperCell/Controller/loadSeqCtrl.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	assert, nextIndex, hasExplicitReset, notify, parent, addNode, children, verify, name, printfs, addAssignment, addPin, wait, whenCond, $asInstanceOf, setName, loadSeqCtrl, <>, _clock, computeCtrl, equals, setModuleName, currentIter, bindings, seqMemAddr, names, ssEnd, resetPin, asInstanceOf, verifyWireWrap, switchKeys, addClock, params, startComputeValid, synchronized, computeEnable, traversal, markComponent, verilog_parameters, epilogueDepth, seqProceed, bfs, $isInstanceOf, spillEnd, loadSeqCtrlMain, moduleName, addDefaultReset, addResetPin, main, inValid, notifyAll, named, prologueDepth, resets, debug, isInstanceOf, dfs, assignments, asserts, iterCount, loadCtrlConfigure, nindex, <init>, stripComponent, clocks, inConfig, reportWireWrap, clock, apply, printf, spillEndAddr, nodes, ==, reset_=, clone, whenConds, neededWireWraps, $init$, addModule$default$2, computeDone, addModule, reset, hasExplicitClock, toString, resetComputeValid, io, !=, getClass, nextIterStart, findBinding, addPin$default$2, _reset, nextRequest, lastAddr, ne, hasWhenCond, epilogueSpill, computeCtrlValid, getPathName, steadyStateDepth, eq, debugs, getPathName$default$1, wires, ##, finalize, hashCode, level, seqMemAddrValid.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/loadSeq.scala: Set(loadSeqCtrl, seqMemAddr, seqProceed, spillEnd, inValid, <init>, inConfig, apply, io, nextIterStart, seqMemAddrValid)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /home/jayant/HyperCell/Controller/fifo.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /home/jayant/HyperCell/Controller/fifo.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/home/jayant/HyperCell/Controller/fifo.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/home/jayant/HyperCell/Controller/fifo.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /home/jayant/HyperCell/Controller/fifo.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	assert, nextIndex, hasExplicitReset, notify, parent, addNode, children, deqPtr, verify, name, printfs, addAssignment, addPin, wait, whenCond, $asInstanceOf, setName, <>, _clock, equals, setModuleName, addrWidth, bindings, names, resetPin, asInstanceOf, verifyWireWrap, switchKeys, addClock, enqPtr, params, synchronized, deqValid, traversal, markComponent, verilog_parameters, deqPtrInc, bfs, $isInstanceOf, fifoMain, deqData, moduleName, addDefaultReset, addResetPin, main, notifyAll, named, resets, isFullNext, debug, isInstanceOf, dfs, assignments, asserts, fifoMem, nindex, <init>, stripComponent, clocks, reportWireWrap, clock, apply, printf, doEnq, nodes, enqData, ==, isFull, reset_=, clone, whenConds, neededWireWraps, rst, $init$, addModule$default$2, addModule, reset, hasExplicitClock, toString, deqRdy, io, !=, enqPtrInc, getClass, doDeq, enqRdy, findBinding, addPin$default$2, _reset, isEmpty, ne, fifo, hasWhenCond, getPathName, enqValid, eq, debugs, getPathName$default$1, wires, ##, finalize, hashCode, level.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/controllerLocalStorage.scala: Set(addrWidth, deqValid, deqData, <init>, apply, enqData, rst, deqRdy, io, enqRdy, fifo, enqValid)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/fabInSeqDP.scala: Set(deqValid, deqData, <init>, apply, enqData, rst, deqRdy, io, enqRdy, fifo, enqValid)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/loadSeqDP.scala: Set(deqValid, deqData, <init>, apply, enqData, rst, deqRdy, io, enqRdy, fifo, enqValid)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/storeSeqDP.scala: Set(deqValid, deqData, <init>, apply, enqData, rst, deqRdy, io, enqRdy, fifo, enqValid)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/fabOutSeqDP.scala: Set(deqValid, deqData, <init>, apply, enqData, rst, deqRdy, io, enqRdy, fifo, enqValid)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /home/jayant/HyperCell/Controller/storeSeq.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /home/jayant/HyperCell/Controller/storeSeq.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/home/jayant/HyperCell/Controller/storeSeq.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/home/jayant/HyperCell/Controller/storeSeq.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /home/jayant/HyperCell/Controller/storeSeq.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	assert, nextIndex, hasExplicitReset, notify, storeSeq, parent, addNode, children, verify, name, printfs, addAssignment, addPin, wait, whenCond, $asInstanceOf, setName, <>, _clock, equals, setModuleName, bindings, names, resetPin, asInstanceOf, verifyWireWrap, switchKeys, addClock, fabOutToStoreValid, params, synchronized, traversal, markComponent, verilog_parameters, bfs, $isInstanceOf, moduleName, addDefaultReset, addResetPin, storeMemData, inValid, notifyAll, named, resets, fabOutToStore, debug, isInstanceOf, dfs, assignments, asserts, nindex, <init>, stripComponent, clocks, inConfig, reportWireWrap, clock, apply, printf, nodes, storeMemValid, ==, reset_=, clone, whenConds, storeDPClass, neededWireWraps, $init$, addModule$default$2, computeDone, addModule, reset, hasExplicitClock, toString, io, !=, getClass, findBinding, addPin$default$2, _reset, ne, storeCtrlClass, hasWhenCond, getPathName, eq, debugs, storeMemRdy, getPathName$default$1, wires, ##, finalize, hashCode, level.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/controllerTop.scala: Set(storeSeq, fabOutToStoreValid, storeMemData, inValid, fabOutToStore, <init>, inConfig, apply, storeMemValid, computeDone, io, storeMemRdy)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /home/jayant/HyperCell/Controller/fabInSeqCtrl.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /home/jayant/HyperCell/Controller/fabInSeqCtrl.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/home/jayant/HyperCell/Controller/fabInSeqCtrl.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/home/jayant/HyperCell/Controller/fabInSeqCtrl.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /home/jayant/HyperCell/Controller/fabInSeqCtrl.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	assert, nextIndex, hasExplicitReset, notify, parent, addNode, children, verify, name, printfs, addAssignment, addPin, wait, whenCond, $asInstanceOf, setName, <>, _clock, computeCtrl, equals, setModuleName, currentIter, bindings, seqMemAddr, names, ssEnd, resetPin, asInstanceOf, verifyWireWrap, switchKeys, addClock, params, startComputeValid, synchronized, computeEnable, traversal, markComponent, verilog_parameters, epilogueDepth, seqProceed, bfs, $isInstanceOf, moduleName, addDefaultReset, addResetPin, inValid, notifyAll, named, prologueDepth, resets, debug, isInstanceOf, dfs, assignments, asserts, iterCount, nindex, <init>, stripComponent, clocks, inConfig, reportWireWrap, clock, apply, printf, spillEndAddr, nodes, ==, reset_=, clone, whenConds, neededWireWraps, $init$, addModule$default$2, computeDone, addModule, reset, hasExplicitClock, toString, resetComputeValid, io, !=, getClass, fabInSeqCtrlConfigure, findBinding, addPin$default$2, _reset, nextRequest, lastAddr, ne, hasWhenCond, epilogueSpill, computeCtrlValid, getPathName, fabInSeqCtrl, steadyStateDepth, eq, debugs, getPathName$default$1, wires, ##, finalize, hashCode, level, seqMemAddrValid.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/fabInSeq.scala: Set(seqMemAddr, seqProceed, inValid, <init>, inConfig, apply, computeDone, io, fabInSeqCtrl, seqMemAddrValid)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /home/jayant/HyperCell/Controller/memConfig.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /home/jayant/HyperCell/Controller/memConfig.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/home/jayant/HyperCell/Controller/memConfig.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/home/jayant/HyperCell/Controller/memConfig.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /home/jayant/HyperCell/Controller/memConfig.scala source file has the following implicit definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	cmdToId.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following member ref dependencies of /home/jayant/HyperCell/Controller/memConfig.scala are invalidated:[0m
[0m[[0mdebug[0m] [0m[naha] 	/home/jayant/HyperCell/Controller/fabInSeqDP.scala[0m
[0m[[0mdebug[0m] [0m[naha] 	/home/jayant/HyperCell/Controller/fabOutSeqDP.scala[0m
[0m[[0mdebug[0m] [0m[naha] 	/home/jayant/HyperCell/Controller/loadSeqDP.scala[0m
[0m[[0mdebug[0m] [0m[naha] 	/home/jayant/HyperCell/Controller/storeSeqDP.scala[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /home/jayant/HyperCell/Controller/storeSeqDP.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /home/jayant/HyperCell/Controller/storeSeqDP.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/home/jayant/HyperCell/Controller/storeSeqDP.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/home/jayant/HyperCell/Controller/storeSeqDP.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /home/jayant/HyperCell/Controller/storeSeqDP.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	assert, nextIndex, hasExplicitReset, offsetUpdateVal, notify, storeReqAddr, parent, addNode, children, savedOffsets, verify, name, storeReqData, printfs, loopOffsetLkup, addAssignment, addPin, wait, whenCond, $asInstanceOf, setName, loopOffsetMemConfig, compDoneCnt, <>, _clock, baseAddrMem, equals, storeReqFifo, setModuleName, storeSeqDP, portID, bindings, seqMemAddr, names, resetPin, asInstanceOf, verifyWireWrap, switchKeys, addClock, fabOutToStoreValid, params, synchronized, traversal, markComponent, verilog_parameters, seqProceed, bfs, $isInstanceOf, getNextReq, spillEnd, spillEndVal, noCopyBaseAddrVal, nextIterStartVal, seqMemAddrValidVal, moduleName, addDefaultReset, addResetPin, storeMemData, seqMemAddrVal, offsetAddr, inValid, notifyAll, named, epilogueAfterSpill, resets, fabOutToStore, storeMemAddr, debug, isInstanceOf, dfs, assignments, asserts, storeMemAddrVal, nindex, baseAddrMemConfig, <init>, stripComponent, clocks, inConfig, reportWireWrap, clock, apply, printf, loopOffsetMem, nodes, storeMemValid, ==, reset_=, storeSeqMem, addrLkupIndex, clone, whenConds, baseAddrLkup, neededWireWraps, $init$, addModule$default$2, offsetUpdate, storeSeqMemConfig, computeDone, addModule, savedOffsetsVal, reset, hasExplicitClock, toString, io, !=, getClass, nextIterStart, spillOffsetMemConfig, findBinding, addPin$default$2, computeDoneCtrl, _reset, ne, nextSeq, hasWhenCond, epilogueAfterSpillVal, noCopyBaseAddr, getPathName, spillLkup, eq, debugs, storeMemRdy, getPathName$default$1, wires, ##, finalize, portSel, firstReqDone, hashCode, spillOffsetMem, level, nextSeqValid, seqMemAddrValid.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/storeSeq.scala: Set(storeSeqDP, seqMemAddr, fabOutToStoreValid, seqProceed, spillEnd, storeMemData, inValid, fabOutToStore, <init>, inConfig, apply, storeMemValid, computeDone, io, nextIterStart, computeDoneCtrl, storeMemRdy, seqMemAddrValid)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /home/jayant/HyperCell/Controller/fabOutSeq.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /home/jayant/HyperCell/Controller/fabOutSeq.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/home/jayant/HyperCell/Controller/fabOutSeq.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/home/jayant/HyperCell/Controller/fabOutSeq.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /home/jayant/HyperCell/Controller/fabOutSeq.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	assert, fabOutStore, nextIndex, hasExplicitReset, notify, parent, addNode, children, fabOutLocValid, verify, name, fabOut, printfs, addAssignment, addPin, wait, whenCond, $asInstanceOf, setName, <>, _clock, equals, setModuleName, bindings, seqMemAddr, names, resetPin, asInstanceOf, verifyWireWrap, switchKeys, addClock, params, synchronized, traversal, markComponent, verilog_parameters, seqProceed, bfs, $isInstanceOf, moduleName, addDefaultReset, addResetPin, fabOutStoreRdy, inValid, notifyAll, named, resets, debug, fabOutValid, fabOutCtrl, isInstanceOf, dfs, assignments, asserts, nindex, <init>, stripComponent, clocks, fabOutStoreValid, inConfig, reportWireWrap, fabOutLocRdy, clock, apply, printf, nodes, ==, outLocValid, reset_=, clone, whenConds, neededWireWraps, rst, $init$, addModule$default$2, addModule, reset, hasExplicitClock, fabOutSeq, toString, io, !=, fabOutDP, getClass, fabOutRdy, fabOutLoc, findBinding, addPin$default$2, _reset, ne, hasWhenCond, getPathName, eq, debugs, getPathName$default$1, wires, ##, finalize, hashCode, level, seqMemAddrValid.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/fabOutSeqTop.scala: Set(fabOutStore, fabOutLocValid, fabOut, fabOutStoreRdy, inValid, fabOutValid, <init>, fabOutStoreValid, inConfig, fabOutLocRdy, apply, rst, fabOutSeq, io, fabOutRdy, fabOutLoc)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /home/jayant/HyperCell/Controller/loadSeqDP.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /home/jayant/HyperCell/Controller/loadSeqDP.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/home/jayant/HyperCell/Controller/loadSeqDP.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/home/jayant/HyperCell/Controller/loadSeqDP.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /home/jayant/HyperCell/Controller/loadSeqDP.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	assert, nextIndex, hasExplicitReset, offsetUpdateVal, notify, loadRqst, parent, addNode, lRespData, children, savedOffsets, verify, name, lrRespValid, printfs, loopOffsetLkup, addAssignment, addPin, wait, lRespLkupValid, whenCond, $asInstanceOf, setName, seqInfoRegValid, loopOffsetMemConfig, <>, _clock, baseAddrMem, equals, loadRespValid, setModuleName, memBankRdy, nextRqst, memBankValid, bindings, nextLkupIndex, seqMemAddr, names, resetPin, asInstanceOf, verifyWireWrap, switchKeys, addClock, params, synchronized, deqValid, traversal, markComponent, verilog_parameters, seqProceed, lrRespFifo, bfs, $isInstanceOf, spillEnd, spillEndVal, noCopyBaseAddrVal, deqData, nextIterStartVal, seqMemAddrValidVal, moduleName, addDefaultReset, outDPFifo, addResetPin, regLookupData, main, seqMemAddrVal, lrReqFifo, offsetAddr, inValid, notifyAll, named, epilogueAfterSpill, resets, loadRqstRdy, debug, isInstanceOf, dfs, assignments, loadRqstValid, asserts, nindex, baseAddrMemConfig, enqReqWire, <init>, stripComponent, clocks, regLookupIndex, inConfig, loadSeqDPMain, reportWireWrap, clock, apply, printf, loopOffsetMem, loadSeqMem, nodes, enqData, ==, reset_=, addrLkupIndex, clone, whenConds, baseAddrLkup, neededWireWraps, nextRqstValid, rst, lookupIndex, memBankEnq, $init$, addModule$default$2, offsetUpdate, addModule, seqInfoReg, loadRespRdy, lRespFifoDeq, savedOffsetsVal, reset, hasExplicitClock, toString, deqRdy, io, !=, lrResp, loadSeqMemConfig, getClass, nextIterStart, spillOffsetMemConfig, enqRdy, findBinding, loadSeqDP, addPin$default$2, _reset, ne, regLkupMemConfig, hasWhenCond, epilogueAfterSpillVal, enqDoneReg, noCopyBaseAddr, lRespDest, getPathName, spillLkup, enqValid, loadResp, eq, debugs, getPathName$default$1, wires, regLookup, ##, finalize, hashCode, regLookupMem, spillOffsetMem, enqComplete, level, seqMemAddrValid.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/loadSeq.scala: Set(loadRqst, loadRespValid, memBankRdy, memBankValid, seqMemAddr, seqProceed, spillEnd, inValid, loadRqstRdy, loadRqstValid, <init>, inConfig, apply, memBankEnq, loadRespRdy, io, nextIterStart, loadSeqDP, loadResp, seqMemAddrValid)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /home/jayant/HyperCell/Controller/fabOutSeqArb.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /home/jayant/HyperCell/Controller/fabOutSeqArb.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/home/jayant/HyperCell/Controller/fabOutSeqArb.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/home/jayant/HyperCell/Controller/fabOutSeqArb.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /home/jayant/HyperCell/Controller/fabOutSeqArb.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	assert, nextIndex, hasExplicitReset, notify, parent, addNode, children, emptySpace, fabOutLocValid, verify, name, printfs, addAssignment, addPin, wait, whenCond, request, $asInstanceOf, setName, <>, grantWire, _clock, equals, locStoreRdy, setModuleName, bindings, locStoreData, names, resetPin, asInstanceOf, verifyWireWrap, switchKeys, addClock, muxValid, params, synchronized, deqValid, traversal, markComponent, verilog_parameters, bfs, $isInstanceOf, deqData, moduleName, addDefaultReset, addResetPin, outFifo, notifyAll, named, resets, debug, isInstanceOf, anyGrant, dfs, arb, assignments, asserts, nindex, <init>, stripComponent, clocks, locStoreValid, reportWireWrap, fabOutLocRdy, clock, apply, printf, nodes, enqData, ==, reset_=, clone, grantReg, whenConds, neededWireWraps, muxReg, rst, $init$, addModule$default$2, addModule, reset, hasExplicitClock, toString, deqRdy, io, !=, getClass, fabOutLoc, enqRdy, findBinding, addPin$default$2, _reset, fabOutSeqArb, ne, hasWhenCond, getPathName, enqValid, muxValidReg, eq, debugs, inFifo, getPathName$default$1, wires, ##, finalize, hashCode, level.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/fabOutSeqTop.scala: Set(fabOutLocValid, locStoreRdy, locStoreData, <init>, locStoreValid, fabOutLocRdy, apply, rst, io, fabOutLoc, fabOutSeqArb)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /home/jayant/HyperCell/Controller/mainConfigure.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /home/jayant/HyperCell/Controller/mainConfigure.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/home/jayant/HyperCell/Controller/mainConfigure.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/home/jayant/HyperCell/Controller/mainConfigure.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /home/jayant/HyperCell/Controller/mainConfigure.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	assert, nextIndex, hasExplicitReset, notify, parent, addNode, children, verify, name, printfs, addAssignment, addPin, wait, whenCond, $asInstanceOf, setName, <>, storeConfig, loadConfigValid, _clock, equals, setModuleName, bindings, names, resetPin, asInstanceOf, verifyWireWrap, switchKeys, addClock, params, synchronized, traversal, markComponent, verilog_parameters, bfs, $isInstanceOf, moduleName, addDefaultReset, addResetPin, notifyAll, named, resets, debug, isInstanceOf, dfs, assignments, asserts, nindex, storeConfigValid, loadConfig, <init>, stripComponent, clocks, fabConfigValid, reportWireWrap, clock, apply, printf, nodes, configData, ==, reset_=, clone, fabInConfigValid, whenConds, neededWireWraps, $init$, fabConfig, addModule$default$2, addModule, reset, hasExplicitClock, toString, configDataValid, configReg, io, !=, fabOutConfigValid, mainConfigure, getClass, findBinding, addPin$default$2, _reset, ne, fabOutConfig, hasWhenCond, fabInConfig, getPathName, configValidReg, eq, debugs, getPathName$default$1, wires, ##, finalize, hashCode, level.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/controllerTop.scala: Set(storeConfig, loadConfigValid, storeConfigValid, loadConfig, <init>, apply, configData, fabInConfigValid, configDataValid, io, fabOutConfigValid, mainConfigure, fabOutConfig, fabInConfig)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /home/jayant/HyperCell/Controller/loadSeq.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /home/jayant/HyperCell/Controller/loadSeq.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/home/jayant/HyperCell/Controller/loadSeq.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/home/jayant/HyperCell/Controller/loadSeq.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /home/jayant/HyperCell/Controller/loadSeq.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	assert, nextIndex, hasExplicitReset, notify, loadCtrlClass, loadRqst, parent, addNode, children, verify, name, printfs, addAssignment, addPin, wait, whenCond, $asInstanceOf, setName, loadDPClass, <>, _clock, equals, loadRespValid, setModuleName, memBankRdy, memBankValid, bindings, names, resetPin, asInstanceOf, verifyWireWrap, switchKeys, addClock, params, synchronized, traversal, markComponent, verilog_parameters, bfs, $isInstanceOf, moduleName, addDefaultReset, addResetPin, inValid, notifyAll, named, resets, loadRqstRdy, debug, isInstanceOf, dfs, assignments, loadRqstValid, asserts, nindex, <init>, stripComponent, clocks, inConfig, reportWireWrap, clock, apply, printf, nodes, ==, reset_=, clone, whenConds, neededWireWraps, memBankEnq, $init$, addModule$default$2, addModule, loadRespRdy, reset, hasExplicitClock, toString, loadSeq, io, !=, getClass, findBinding, addPin$default$2, _reset, ne, hasWhenCond, getPathName, loadResp, eq, debugs, getPathName$default$1, wires, ##, finalize, hashCode, level.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/controllerTop.scala: Set(loadRqst, loadRespValid, memBankRdy, memBankValid, inValid, loadRqstRdy, loadRqstValid, <init>, inConfig, apply, memBankEnq, loadRespRdy, loadSeq, io, loadResp)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /home/jayant/HyperCell/Controller/fabOutSeqCtrl.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /home/jayant/HyperCell/Controller/fabOutSeqCtrl.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/home/jayant/HyperCell/Controller/fabOutSeqCtrl.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/home/jayant/HyperCell/Controller/fabOutSeqCtrl.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /home/jayant/HyperCell/Controller/fabOutSeqCtrl.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	assert, nextIndex, hasExplicitReset, notify, parent, addNode, children, verify, name, printfs, addAssignment, addPin, wait, whenCond, $asInstanceOf, setName, <>, _clock, computeCtrl, equals, setModuleName, currentIter, bindings, seqMemAddr, names, ssEnd, resetPin, asInstanceOf, verifyWireWrap, switchKeys, addClock, params, startComputeValid, synchronized, computeEnable, traversal, markComponent, verilog_parameters, epilogueDepth, seqProceed, bfs, $isInstanceOf, moduleName, addDefaultReset, addResetPin, inValid, notifyAll, named, prologueDepth, resets, debug, isInstanceOf, dfs, assignments, asserts, iterCount, nindex, <init>, stripComponent, clocks, inConfig, reportWireWrap, clock, apply, printf, spillEndAddr, nodes, ==, outLocValid, reset_=, clone, whenConds, neededWireWraps, $init$, addModule$default$2, nextSeqRdy, computeDone, addModule, reset, hasExplicitClock, toString, resetComputeValid, reqDoneWire, io, !=, getClass, findBinding, addPin$default$2, _reset, nextRequest, lastAddr, ne, hasWhenCond, epilogueSpill, computeCtrlValid, getPathName, steadyStateDepth, eq, debugs, getPathName$default$1, fabOutSeqCtrlConfigure, fabOutSeqCtrl, wires, ##, finalize, hashCode, level, reqDone, seqMemAddrValid.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/fabOutSeq.scala: Set(seqMemAddr, seqProceed, inValid, <init>, inConfig, apply, outLocValid, io, fabOutSeqCtrl, seqMemAddrValid)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /home/jayant/HyperCell/Controller/fifoFabOut.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /home/jayant/HyperCell/Controller/fifoFabOut.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/home/jayant/HyperCell/Controller/fifoFabOut.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/home/jayant/HyperCell/Controller/fifoFabOut.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /home/jayant/HyperCell/Controller/fifoFabOut.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	assert, nextIndex, hasExplicitReset, fifoFabOut, notify, parent, addNode, children, emptySpace, deqPtr, verify, name, printfs, addAssignment, addPin, wait, whenCond, $asInstanceOf, setName, <>, _clock, equals, setModuleName, addrWidth, bindings, names, resetPin, asInstanceOf, verifyWireWrap, switchKeys, addClock, enqPtr, params, synchronized, deqValid, traversal, markComponent, verilog_parameters, deqPtrInc, bfs, $isInstanceOf, deqData, moduleName, addDefaultReset, addResetPin, notifyAll, named, resets, isFullNext, debug, isInstanceOf, dfs, assignments, asserts, fifoMem, nindex, <init>, stripComponent, clocks, reportWireWrap, clock, apply, printf, doEnq, nodes, enqData, ==, isFull, reset_=, clone, whenConds, neededWireWraps, rst, $init$, addModule$default$2, addModule, reset, hasExplicitClock, toString, deqRdy, io, !=, enqPtrInc, getClass, doDeq, enqRdy, findBinding, addPin$default$2, _reset, isEmpty, ne, hasWhenCond, getPathName, enqValid, eq, debugs, getPathName$default$1, wires, ##, finalize, hashCode, level.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/fabOutSeqArb.scala: Set(fifoFabOut, emptySpace, deqValid, deqData, <init>, apply, enqData, rst, deqRdy, io, enqRdy, enqValid)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /home/jayant/HyperCell/Controller/parameters.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /home/jayant/HyperCell/Controller/parameters.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/home/jayant/HyperCell/Controller/parameters.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/home/jayant/HyperCell/Controller/parameters.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /home/jayant/HyperCell/Controller/parameters.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	srMemVar, fabOutLocDataWidth, notify, regLookupMemDepth, xBitNo, fabLanes, spillMemDepth, lrReqFifoDepth, localStorageDepth, loopOffsetMemWidth, addrLkupMemDepth, loadSeqMemAddrWidth, wait, localStorageWidth, lsMemVar, $asInstanceOf, addrLkupIndexWidth, sWidth, lrRespFifoWidth, regIndexWidth, spillMemWidth, equals, combMemWidth, loadIterCountWidth, fabOutMemVar, loadSeqMemDepth, iterCntSize, asInstanceOf, StoreSeqConfig, srcToDestWidth, fabSeqWidth, seqMemWidth, addrLkupMemWidth, loopOffsetMemDepth, synchronized, srSpillOffsetVar, prologueSize, vMemWidth, nextSeqWidth, baseMemDepth, $isInstanceOf, offsetAddrWidth, srWidth, srBaseAddrVar, loadSeqMemWidth, lrRespFifoDepth, fabInMemVar, portIDWidth, notifyAll, storeIterCountWidth, maxFabricInputs, isInstanceOf, lsOffsetAddrVar, srcToDestValidBit, lRespOutFifoDepth, lWidth, lsSpillOffsetVar, steadyStateSize, srReqFifoWidth, memTypeWidth, regIndexSize, ==, lookupIndexWidth, regLkupIndexAddrWidth, clone, portIdWidth, bankInfoWidth, lsRegLkupVar, regLookupMemWidth, srReqFifoDepth, fabInpSeqMemWidth, LoadSeqConfig, iterCountWidth, controllerTopConfig, toString, !=, seqMemDepth, baseMemWidth, MemConfig, epilogueSize, lsBaseAddrVar, getClass, dWidth, srOffsetAddrVar, seqMemAddrWidth, inValidateBit, ne, fabOutConfig, fabInConfig, lrReqFifoWidth, eq, epilogueSpillSize, cMemWidth, ##, finalize, hashCode.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/fabOutSeqArb.scala: Set(fabOutLocDataWidth, fabOutConfig)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/fabInSeqDP.scala: Set(localStorageDepth, localStorageWidth, regIndexWidth, srcToDestWidth, seqMemWidth, srcToDestValidBit, regIndexSize, portIdWidth, fabInpSeqMemWidth, seqMemDepth, seqMemAddrWidth, inValidateBit, fabInConfig)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/fabOutSeqCtrl.scala: Set(xBitNo, iterCntSize, fabSeqWidth, prologueSize, steadyStateSize, iterCountWidth, seqMemDepth, epilogueSize, dWidth, seqMemAddrWidth, fabOutConfig, epilogueSpillSize)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/controllerConfigure.scala: Set(lWidth, LoadSeqConfig)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/loadSeqDP.scala: Set(regLookupMemDepth, spillMemDepth, lrReqFifoDepth, loopOffsetMemWidth, loadSeqMemAddrWidth, addrLkupIndexWidth, lrRespFifoWidth, spillMemWidth, loadSeqMemDepth, loopOffsetMemDepth, baseMemDepth, offsetAddrWidth, loadSeqMemWidth, lrRespFifoDepth, maxFabricInputs, lRespOutFifoDepth, lookupIndexWidth, regLkupIndexAddrWidth, regLookupMemWidth, LoadSeqConfig, baseMemWidth, lrReqFifoWidth)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/storeSeqDP.scala: Set(spillMemDepth, loopOffsetMemWidth, addrLkupIndexWidth, spillMemWidth, StoreSeqConfig, seqMemWidth, loopOffsetMemDepth, baseMemDepth, offsetAddrWidth, portIDWidth, maxFabricInputs, srReqFifoWidth, srReqFifoDepth, seqMemDepth, baseMemWidth, seqMemAddrWidth)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/controllerTop.scala: Set(lrRespFifoWidth, LoadSeqConfig, controllerTopConfig, fabOutConfig, fabInConfig, lrReqFifoWidth)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/memConfig.scala: Set(combMemWidth, iterCntSize, vMemWidth, memTypeWidth, MemConfig)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/fabOutSeqTop.scala: Set(bankInfoWidth, fabOutConfig)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/fabOutSeq.scala: Set(bankInfoWidth, fabOutConfig)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/storeSeqCtrl.scala: Set(xBitNo, sWidth, iterCntSize, StoreSeqConfig, prologueSize, srWidth, storeIterCountWidth, steadyStateSize, seqMemDepth, epilogueSize, seqMemAddrWidth, epilogueSpillSize)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/fabInSeq.scala: Set(localStorageWidth, fabInConfig)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/fabInSeqCtrl.scala: Set(xBitNo, iterCntSize, fabSeqWidth, prologueSize, steadyStateSize, iterCountWidth, seqMemDepth, epilogueSize, dWidth, seqMemAddrWidth, fabInConfig, epilogueSpillSize)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/loadSeqCtrl.scala: Set(xBitNo, loadSeqMemAddrWidth, sWidth, loadIterCountWidth, loadSeqMemDepth, iterCntSize, prologueSize, lWidth, steadyStateSize, LoadSeqConfig, epilogueSize, epilogueSpillSize)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/storeSeq.scala: Set(StoreSeqConfig, maxFabricInputs)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/loadSeq.scala: Set(lrRespFifoWidth, LoadSeqConfig, lrReqFifoWidth)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/fabOutSeqDP.scala: Set(seqMemWidth, nextSeqWidth, bankInfoWidth, seqMemDepth, seqMemAddrWidth, fabOutConfig)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /home/jayant/HyperCell/Controller/storeSeqCtrl.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /home/jayant/HyperCell/Controller/storeSeqCtrl.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/home/jayant/HyperCell/Controller/storeSeqCtrl.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/home/jayant/HyperCell/Controller/storeSeqCtrl.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /home/jayant/HyperCell/Controller/storeSeqCtrl.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	assert, nextIndex, hasExplicitReset, notify, storeSeqCtrl, parent, addNode, children, verify, name, printfs, addAssignment, addPin, wait, whenCond, $asInstanceOf, setName, <>, _clock, computeCtrl, equals, setModuleName, currentIter, bindings, seqMemAddr, names, ssEnd, resetPin, asInstanceOf, verifyWireWrap, switchKeys, addClock, params, startComputeValid, synchronized, storeCtrlConfigure, computeEnable, traversal, markComponent, verilog_parameters, epilogueDepth, seqProceed, bfs, $isInstanceOf, spillEnd, moduleName, addDefaultReset, addResetPin, inValid, notifyAll, named, prologueDepth, resets, debug, isInstanceOf, dfs, assignments, asserts, iterCount, nindex, <init>, stripComponent, clocks, inConfig, reportWireWrap, clock, apply, printf, spillEndAddr, nodes, ==, reset_=, clone, whenConds, neededWireWraps, $init$, addModule$default$2, computeDone, addModule, reset, hasExplicitClock, toString, resetComputeValid, io, !=, getClass, nextIterStart, findBinding, addPin$default$2, _reset, nextRequest, lastAddr, ne, hasWhenCond, epilogueSpill, computeCtrlValid, getPathName, steadyStateDepth, eq, debugs, getPathName$default$1, wires, ##, finalize, hashCode, level, seqMemAddrValid.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/storeSeq.scala: Set(storeSeqCtrl, seqMemAddr, seqProceed, spillEnd, inValid, <init>, inConfig, apply, computeDone, io, nextIterStart, seqMemAddrValid)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /home/jayant/HyperCell/Controller/globalParameters.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /home/jayant/HyperCell/Controller/globalParameters.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/home/jayant/HyperCell/Controller/globalParameters.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/home/jayant/HyperCell/Controller/globalParameters.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /home/jayant/HyperCell/Controller/globalParameters.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	notify, memAddrWidth, wait, $asInstanceOf, equals, asInstanceOf, datawidth, GlobalConfig, synchronized, $isInstanceOf, memDepth, notifyAll, isInstanceOf, extMemAddrWidth, ==, clone, memWidth, toString, fabPortCount, !=, getClass, memBanks, ne, eq, ##, finalize, hashCode, dataWidth, memBankCount.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/fabricConfigure.scala: Set(GlobalConfig, dataWidth)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/controllerLocalStorage.scala: Set(GlobalConfig, memDepth, memWidth)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/fifo.scala: Set(GlobalConfig)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/fabOutSeqArb.scala: Set(GlobalConfig, fabPortCount)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/fabInSeqDP.scala: Set(datawidth, GlobalConfig, fabPortCount, memBankCount)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/fabOutSeqCtrl.scala: Set(datawidth, GlobalConfig, fabPortCount)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/RRArbiter.scala: Set(GlobalConfig)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/parameters.scala: Set(memAddrWidth, datawidth, GlobalConfig, extMemAddrWidth, fabPortCount, memBanks, dataWidth, memBankCount)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/controllerConfigure.scala: Set(GlobalConfig, dataWidth)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/loadSeqDP.scala: Set(memAddrWidth, GlobalConfig, memWidth, memBanks, dataWidth)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/fifoFabOut.scala: Set(GlobalConfig)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/storeSeqDP.scala: Set(GlobalConfig, extMemAddrWidth, dataWidth)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/controllerTop.scala: Set(datawidth, GlobalConfig, extMemAddrWidth, fabPortCount, dataWidth, memBankCount)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/memConfig.scala: Set(memAddrWidth, GlobalConfig, dataWidth)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/fabOutSeqTop.scala: Set(datawidth, GlobalConfig, fabPortCount, dataWidth, memBankCount)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/fabOutSeq.scala: Set(datawidth, GlobalConfig, fabPortCount, dataWidth)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/customReg.scala: Set(GlobalConfig, memDepth, memWidth)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/storeSeqCtrl.scala: Set(GlobalConfig, dataWidth)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/fabInSeq.scala: Set(datawidth, GlobalConfig, fabPortCount, memBankCount)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/fabInSeqCtrl.scala: Set(datawidth, GlobalConfig)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/memoryBank.scala: Set(GlobalConfig, memDepth, memWidth)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/loadSeqCtrl.scala: Set(GlobalConfig, dataWidth)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/storeSeq.scala: Set(GlobalConfig, extMemAddrWidth, dataWidth)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/loadSeq.scala: Set(memAddrWidth, GlobalConfig, memWidth, memBanks, dataWidth)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/fabOutSeqDP.scala: Set(datawidth, GlobalConfig, dataWidth)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/mainConfigure.scala: Set(GlobalConfig, dataWidth)[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/fabricConfigureTop.scala: Set(GlobalConfig, dataWidth)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /home/jayant/HyperCell/Controller/fabOutSeqTop.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /home/jayant/HyperCell/Controller/fabOutSeqTop.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/home/jayant/HyperCell/Controller/fabOutSeqTop.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/home/jayant/HyperCell/Controller/fabOutSeqTop.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /home/jayant/HyperCell/Controller/fabOutSeqTop.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	assert, fabOutStore, nextIndex, hasExplicitReset, notify, parent, addNode, children, fabOutLocValid, verify, name, fabOut, printfs, addAssignment, addPin, wait, whenCond, $asInstanceOf, setName, <>, _clock, equals, locStoreRdy, setModuleName, fabOutSeqArbClass, bindings, locStoreData, names, resetPin, asInstanceOf, verifyWireWrap, switchKeys, addClock, params, synchronized, traversal, markComponent, verilog_parameters, bfs, $isInstanceOf, fabOutSeqTop, moduleName, addDefaultReset, addResetPin, fabOutStoreRdy, inValid, notifyAll, named, resets, debug, fabOutValid, isInstanceOf, dfs, assignments, asserts, nindex, <init>, stripComponent, clocks, locStoreValid, fabOutStoreValid, inConfig, reportWireWrap, fabOutLocRdy, clock, apply, printf, nodes, ==, reset_=, clone, fabOutSeqIntClass, whenConds, neededWireWraps, rst, $init$, addModule$default$2, addModule, reset, hasExplicitClock, toString, io, !=, getClass, fabOutRdy, fabOutLoc, findBinding, addPin$default$2, _reset, ne, hasWhenCond, getPathName, eq, debugs, getPathName$default$1, wires, ##, finalize, hashCode, level.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/controllerTop.scala: Set(fabOutStore, fabOutLocValid, fabOut, fabOutSeqTop, inValid, fabOutValid, <init>, fabOutStoreValid, inConfig, fabOutLocRdy, apply, io, fabOutRdy, fabOutLoc)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /home/jayant/HyperCell/Controller/fabricConfigureTop.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /home/jayant/HyperCell/Controller/fabricConfigureTop.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/home/jayant/HyperCell/Controller/fabricConfigureTop.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/home/jayant/HyperCell/Controller/fabricConfigureTop.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /home/jayant/HyperCell/Controller/fabricConfigureTop.scala source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	assert, nextIndex, hasExplicitReset, notify, fabricConfigureTopMain, parent, addNode, children, verify, name, printfs, addAssignment, addPin, wait, whenCond, $asInstanceOf, setName, n, <>, _clock, equals, setModuleName, bindings, names, resetPin, asInstanceOf, verifyWireWrap, switchKeys, addClock, params, synchronized, traversal, markComponent, verilog_parameters, bfs, $isInstanceOf, moduleName, addDefaultReset, addResetPin, fabricConfigureTop, main, notifyAll, named, resets, debug, isInstanceOf, dfs, assignments, asserts, nindex, <init>, stripComponent, clocks, inConfig, reportWireWrap, clock, apply, printf, nodes, ==, reset_=, clone, whenConds, neededWireWraps, rst, $init$, addModule$default$2, addModule, reset, hasExplicitClock, toString, outConfig, io, !=, getClass, findBinding, addPin$default$2, _reset, fabricConfigureClass, ne, hasWhenCond, getPathName, eq, debugs, getPathName$default$1, wires, ##, finalize, hashCode, level.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/jayant/HyperCell/Controller/controllerTop.scala: Set(fabricConfigureTop, <init>, inConfig, apply, io)[0m
[0m[[0mdebug[0m] [0m[naha] New invalidations:[0m
[0m[[0mdebug[0m] [0m[naha] 	Set()[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set()[0m
[0m[[0mdebug[0m] [0m[naha] Previously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0mdebug[0m] [0m[naha] 	Set()[0m
[0m[[0mdebug[0m] [0m[naha] All newly invalidated sources after taking into account (previously) recompiled sources:Set()[0m
